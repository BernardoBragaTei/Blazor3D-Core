<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Blazor3D</name>
    </assembly>
    <members>
        <member name="T:Blazor3D.Cameras.Camera">
            <summary>
            <p>Abstract base class for cameras.</p>
            <p>Wrapper for three.js <a target="_blank" href="https://threejs.org/docs/index.html#api/en/cameras/Camera">Camera</a></p>
            </summary>
            <inheritdoc><see cref="T:Blazor3D.Core.Object3D"/></inheritdoc>
        </member>
        <member name="T:Blazor3D.Cameras.PerspectiveCamera">
            <summary>
            <p>Camera that uses perspective projection.
            This projection mode is designed to mimic the way the human eyes see.
            It is the most common projection mode used for rendering a 3D scene.</p>
            <p>Wrapper for three.js <a target="_blank" href="https://threejs.org/docs/index.html#api/en/cameras/PerspectiveCamera">PerspectiveCamera</a></p>
            </summary>
            <inheritdoc><see cref="T:Blazor3D.Cameras.Camera"/></inheritdoc>
        </member>
        <member name="P:Blazor3D.Cameras.PerspectiveCamera.Fov">
            <summary>
             Camera frustum vertical field of view. Default value is 75;
            </summary>
        </member>
        <member name="P:Blazor3D.Cameras.PerspectiveCamera.Near">
            <summary>
            Camera frustum near plane distance.
            </summary>
        </member>
        <member name="P:Blazor3D.Cameras.PerspectiveCamera.Far">
            <summary>
            Camera frustum far plane distance.
            </summary>
        </member>
        <member name="P:Blazor3D.Cameras.PerspectiveCamera.Aspect">
            <summary>
             Camera frustum aspect ratio. It is calculated by Blazor3D component as current width divided by current height.
            </summary>
        </member>
        <member name="T:Blazor3D.Core.BufferGeometry">
            <summary>
            <p>A representation of geometry for mesh, line, or point. 
            Includes vertex positions, face indices, normals, colors, UVs, and custom attributes within buffers, 
            reducing the cost of passing all this data to the GPU.</p>
            <p>Wrapper for three.js <a target="_blank" href="https://threejs.org/docs/index.html#api/en/core/BufferGeometry">BufferGeometry</a></p>
            </summary>
        </member>
        <member name="P:Blazor3D.Core.BufferGeometry.Name">
            <summary>
            Optional name of the object. Default is an empty string. It has not to be unique. 
            </summary>
        </member>
        <member name="P:Blazor3D.Core.BufferGeometry.Uuid">
            <summary>
            <a href="https://en.wikipedia.org/wiki/Universally_unique_identifier" target="_blank">Universal unique identifier</a> of this object instance. It's automatically assigned Guid, so it shouldn't be edited.
            </summary>
        </member>
        <member name="T:Blazor3D.Core.Object3D">
             <summary>
             <p>It's a base abstract class for most objects in <strong>Blazor3D</strong>. 
             It provides functionality for manipulating objects in 3D space.</p>
            <p>Wrapper for three.js <a target="_blank" href="https://threejs.org/docs/index.html#api/en/core/Object3D">Object3D</a></p>
             </summary>
        </member>
        <member name="P:Blazor3D.Core.Object3D.Position">
            <summary>
            Represents the object's local <see cref="T:Blazor3D.Maths.Vector3"/> position. Default is (0, 0, 0).
            </summary>
        </member>
        <member name="P:Blazor3D.Core.Object3D.Rotation">
            <summary>
            Object's local <see cref="T:Blazor3D.Maths.Euler"/> rotation, in radians.
            </summary>
        </member>
        <member name="P:Blazor3D.Core.Object3D.Scale">
            <summary>
            Represents the object's local <see cref="T:Blazor3D.Maths.Vector3"/> scale. Default is (1, 1, 1).
            </summary>
        </member>
        <member name="P:Blazor3D.Core.Object3D.Name">
            <summary>
            Optional name of the object. Default is an empty string. It has not to be unique. 
            </summary>
        </member>
        <member name="P:Blazor3D.Core.Object3D.Uuid">
            <summary>
            <a href="https://en.wikipedia.org/wiki/Universally_unique_identifier" target="_blank">Universal unique identifier</a> of this object instance. It's automatically assigned Guid, so it shouldn't be edited.
            </summary>
        </member>
        <member name="P:Blazor3D.Core.Object3D.Children">
            <summary>
            Collection of <see cref="T:Blazor3D.Core.Object3D"/> child objects.
            </summary>
        </member>
        <member name="M:Blazor3D.Core.Object3D.Add(Blazor3D.Core.Object3D)">
            <summary>
            Adds a child <see cref="T:Blazor3D.Core.Object3D"/> object to the Children collection.
            </summary>
            <param name="child">Child <see cref="T:Blazor3D.Core.Object3D"/> to be added.</param>
        </member>
        <member name="T:Blazor3D.Enums.Import3DFormats">
            <summary>
            3D model formats, which can be used for importing to or exporting from <see cref="T:Blazor3D.Scenes.Scene"/>.
            </summary>
        </member>
        <member name="F:Blazor3D.Enums.Import3DFormats.Obj">
             <summary>
            <a target="_blank" href="https://en.wikipedia.org/wiki/Wavefront_.obj_file">Wavefront Object</a> format.
             </summary>
        </member>
        <member name="F:Blazor3D.Enums.Import3DFormats.Collada">
            <summary>
            <a target="_blank" href="https://en.wikipedia.org/wiki/COLLADA">Collada</a> format.
            </summary>
        </member>
        <member name="F:Blazor3D.Enums.Import3DFormats.Fbx">
            <summary>
            <a target="_blank" href="https://en.wikipedia.org/wiki/FBX">Autodesk FBX</a> format.
            </summary>
        </member>
        <member name="F:Blazor3D.Enums.Import3DFormats.Gltf">
            <summary>
            <a target="_blank" href="https://en.wikipedia.org/wiki/GlTF">glTF</a> format.
            </summary>
        </member>
        <member name="T:Blazor3D.Geometires.BoxGeometry">
            <summary>
            <p>Class for rectangular cuboid with a given 'width', 'height', and 'depth'.</p>
            <p>This class inherits from <see cref="T:Blazor3D.Core.BufferGeometry"/></p>
            <p>Wrapper for three.js <a target="_blank" href="https://threejs.org/docs/index.html#api/en/geometries/BoxGeometry">BoxGeometry</a></p>
            </summary>
            <inheritdoc><see cref="T:Blazor3D.Core.BufferGeometry"/></inheritdoc>
        </member>
        <member name="P:Blazor3D.Geometires.BoxGeometry.Width">
            <summary>
            The length of the edges parallel to the X axis. Default is 1.
            </summary>
        </member>
        <member name="P:Blazor3D.Geometires.BoxGeometry.Height">
            <summary>
            The length of the edges parallel to the Y axis. Default is 1.
            </summary>
        </member>
        <member name="P:Blazor3D.Geometires.BoxGeometry.Depth">
            <summary>
            The length of the edges parallel to the Z axis. Default is 1.
            </summary>
        </member>
        <member name="P:Blazor3D.Geometires.BoxGeometry.WidthSegments">
            <summary>
            Number of segmented rectangular faces along the width of the sides. Default is 1.
            </summary>
        </member>
        <member name="P:Blazor3D.Geometires.BoxGeometry.HeightSegments">
            <summary>
            Number of segmented rectangular faces along the height of the sides. Default is 1.
            </summary>
        </member>
        <member name="P:Blazor3D.Geometires.BoxGeometry.DepthSegments">
            <summary>
            Number of segmented rectangular faces along the depth of the sides. Default is 1.
            </summary>
        </member>
        <member name="T:Blazor3D.Geometires.CircleGeometry">
            <summary>
            <p>Class for a simple shape of Euclidean geometry. 
            It is constructed from a number of triangular segments that are oriented around a central point and extend as far out as a given radius. 
            It is built counter-clockwise from a start angle and a given central angle. 
            It can also be used to create regular polygons, where the number of segments determines the number of sides.</p>
            <p>This class inherits from <see cref="T:Blazor3D.Core.BufferGeometry"/></p>
            <p>Wrapper for three.js <a target="_blank" href="https://threejs.org/docs/index.html#api/en/geometries/CircleGeometry">CircleGeometry</a></p>
            </summary>
            <inheritdoc><see cref="T:Blazor3D.Core.BufferGeometry"/></inheritdoc>
        </member>
        <member name="P:Blazor3D.Geometires.CircleGeometry.Radius">
            <summary>
            Radius of the circle. Default is 1.
            </summary>
        </member>
        <member name="P:Blazor3D.Geometires.CircleGeometry.Segments">
            <summary>
            Number of segments (triangles). Minimum = 3, default = 8.
            </summary>
        </member>
        <member name="P:Blazor3D.Geometires.CircleGeometry.ThetaStart">
            <summary>
            Start angle for first segment. Default is 0 (three o'clock position).
            </summary>
        </member>
        <member name="P:Blazor3D.Geometires.CircleGeometry.ThetaLength">
            <summary>
            The central angle, often called theta, of the circular sector. The default is 2*Pi, which makes for a complete circle.
            </summary>
        </member>
        <member name="T:Blazor3D.Lights.AmbientLight">
            <summary>
            <p>This light globally illuminates all objects in the scene equally.
            This light cannot be used to cast shadows as it does not have a direction.</p>
            <p>This class inherits from <see cref="T:Blazor3D.Lights.Light"/></p>
            <p>Wrapper for three.js <a target="_blank" href="https://threejs.org/docs/index.html#api/en/lights/AmbientLight">AmbientLight</a></p>
            </summary>
            <inheritdoc><see cref="T:Blazor3D.Lights.Light"/></inheritdoc>
        </member>
        <member name="T:Blazor3D.Lights.Light">
            <summary>
            <p>Abstract base class for lights.</p>
            <p>Wrapper for three.js <a target="_blank" href="https://threejs.org/docs/index.html#api/en/lights/Light">Light</a></p>
            </summary>
            <inheritdoc><see cref="T:Blazor3D.Core.Object3D"/></inheritdoc>
        </member>
        <member name="P:Blazor3D.Lights.Light.Color">
            <summary>
            <p>Light color. 
            You can use <a target="_blank" href="https://developer.mozilla.org/en-US/docs/Web/CSS/color_value">web color values</a> to set up required color.
            Default value is "white"</p>
            </summary>
        </member>
        <member name="P:Blazor3D.Lights.Light.Intensity">
            <summary>
            <p>Value of the light's strength/intensity. Default is 1.</p>
            </summary>
        </member>
        <member name="T:Blazor3D.Lights.PointLight">
            <summary>
            <p>A light that gets emitted from a single point in all directions. A common use case for this is to replicate the light emitted from a bare lightbulb.</p>
            <p>This light can cast shadows</p>
            <p>This class inherits from <see cref="T:Blazor3D.Lights.Light"/></p>
            <p>Wrapper for three.js <a target="_blank" href="https://threejs.org/docs/index.html#api/en/lights/PointLight">PointLight</a></p>
            </summary>
            <inheritdoc><see cref="T:Blazor3D.Lights.Light"/></inheritdoc>
        </member>
        <member name="P:Blazor3D.Lights.PointLight.Distance">
            <summary>
            <p>When distance value is NOT 0, light will attenuate linearly from maximum intensity at the light's position down to zero at this distance from the light.</p>
            <p>When distance is zero, light does not attenuate.</p>
            <p>Default is 0.</p>
            </summary>
        </member>
        <member name="P:Blazor3D.Lights.PointLight.Decay">
            <summary>
            <p>The amount the light dims along the distance of the light</p>
            <p>Default is 1.</p>
            </summary>
        </member>
        <member name="T:Blazor3D.Materials.Material">
            <summary>
            <p>Abstract base class for materials.</p>
            <p>Materials describe the appearance of objects. They are defined in a mostly renderer-independent way, so you don't have to rewrite materials if you decide to use a different renderer.</p>
            <p>Wrapper for three.js <a target="_blank" href="https://threejs.org/docs/index.html#api/en/materials/Material">Material</a></p>
            </summary>
        </member>
        <member name="P:Blazor3D.Materials.Material.Name">
            <summary>
            Optional name of the object. Default is an empty string. It has not to be unique. 
            </summary>
        </member>
        <member name="P:Blazor3D.Materials.Material.Uuid">
            <summary>
            <a href="https://en.wikipedia.org/wiki/Universally_unique_identifier" target="_blank">Universal unique identifier</a> of this object instance. It's automatically assigned Guid, so it shouldn't be edited.
            </summary>
        </member>
        <member name="T:Blazor3D.Materials.MeshStandardMaterial">
            <summary>
            <p>A standard physically based Material, using Metallic-Roughness workflow.</p>
            <p>This class inherits from <see cref="T:Blazor3D.Materials.Material"/></p>
            <p>Wrapper for three.js <a target="_blank" href="https://threejs.org/docs/index.html#api/en/materials/MeshStandardMaterial">MeshStandardMaterial</a></p>
            </summary>
            <inheritdoc><see cref="T:Blazor3D.Materials.MeshStandardMaterial"/></inheritdoc>
        </member>
        <member name="P:Blazor3D.Materials.MeshStandardMaterial.Color">
            <summary>
            <p>Light color. 
            You can use <a target="_blank" href="https://developer.mozilla.org/en-US/docs/Web/CSS/color_value">web color values</a> to set up required color.
            Default value is "grey"</p>
            </summary>
        </member>
        <member name="T:Blazor3D.Maths.Euler">
            <summary>
            <p>Representing Euler Angles.
            Euler angles describe a rotational transformation by rotating an object on its various axes in specified amounts per axis, and a specified axis order.
            Iterating through a Euler instance will yield its components (x, y, z, order) in the corresponding order.</p>
            <p>Wrapper for three.js <a target="_blank" href="https://threejs.org/docs/index.html#api/en/math/Euler">Euler</a></p>
            </summary>
        </member>
        <member name="P:Blazor3D.Maths.Euler.X">
            <summary>
            The float angle of the X axis in radians. Default is 0. Optional.
            </summary>
        </member>
        <member name="P:Blazor3D.Maths.Euler.Y">
            <summary>
            The float angle of the Y axis in radians. Default is 0. Optional.
            </summary>
        </member>
        <member name="P:Blazor3D.Maths.Euler.Z">
            <summary>
            The float angle of the Z axis in radians. Default is 0. Optional.
            </summary>
        </member>
        <member name="P:Blazor3D.Maths.Euler.Order">
            <summary>
            String representing the order that the rotations are applied. Default is 'XYZ'. Must be upper case.
            </summary>
        </member>
        <member name="T:Blazor3D.Maths.Vector3">
            <summary>
            <p>Class representing a 3D vector. A 3D vector is an ordered triplet of numbers (labeled x, y, and z),
            which can be used to represent a number of things, such as:</p>
            <ul>
            <li>A point in 3D space.</li>
            <li>A direction, length or scale in 3D space. </li>
            <li>Any arbitrary ordered triplet of numbers.</li>
            </ul>
            <p>Wrapper for three.js <a target="_blank" href="https://threejs.org/docs/index.html#api/en/math/Vector3">Vector3</a></p>
            </summary>
        </member>
        <member name="M:Blazor3D.Maths.Vector3.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Blazor3D.Maths.Vector3.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Constructor with parameters.
            </summary>
            <param name="x">Float X value of this vector. Default is 0.</param>
            <param name="y">Float Y value of this vector. Default is 0.</param>
            <param name="z">Float Z value of this vector. Default is 0.</param>
        </member>
        <member name="P:Blazor3D.Maths.Vector3.X">
            <summary>
            Float X value of this vector. Default is 0.
            </summary>
        </member>
        <member name="P:Blazor3D.Maths.Vector3.Y">
            <summary>
            Float Y value of this vector. Default is 0.
            </summary>
        </member>
        <member name="P:Blazor3D.Maths.Vector3.Z">
            <summary>
            Float Z value of this vector. Default is 0.
            </summary>
        </member>
        <member name="T:Blazor3D.Objects.Group">
            <summary>
            <p>This is almost identical to an <see cref="T:Blazor3D.Core.Object3D"/>. Its purpose is to make working with groups of objects syntactically clearer.</p>
            <p>This object inherits from <see cref="T:Blazor3D.Core.Object3D"/></p>
            <p>Wrapper for three.js <a target="_blank" href="https://threejs.org/docs/index.html#api/en/objects/Group">Group</a></p>
            </summary>
            <inheritdoc><see cref="T:Blazor3D.Core.Object3D"/></inheritdoc>
        </member>
        <member name="T:Blazor3D.Objects.Mesh">
            <summary>
            <p>Class representing triangulated polygon mesh based objects. Also serves as a base for other classes.</p>
            <p>This object inherits from <see cref="T:Blazor3D.Core.Object3D"/></p>
            <p>Wrapper for three.js <a target="_blank" href="https://threejs.org/docs/index.html#api/en/objects/Mesh">Mesh</a></p>
            </summary>
            <inheritdoc><see cref="T:Blazor3D.Core.Object3D"/></inheritdoc>
        </member>
        <member name="P:Blazor3D.Objects.Mesh.Material">
            <summary>
            <p>Collection of <see cref="T:Blazor3D.Materials.Material"/> (or derived classes) materials, defining the object's appearance.</p>
            </summary>
        </member>
        <member name="P:Blazor3D.Objects.Mesh.Geometry">
            <summary>
            <p>An instance of <see cref="T:Blazor3D.Core.BufferGeometry"/> (or derived classes), defining the object's structure.</p>
            </summary>
        </member>
        <member name="T:Blazor3D.Scenes.Scene">
            <summary>
            <p>Scenes allow you to set up what and where is to be rendered by Blazor3D. 
            This is the place where you put your 3D objects and lights.</p>
            <p>This object inherits from <see cref="T:Blazor3D.Core.Object3D"/></p>
            <p>Wrapper for three.js <a target="_blank" href="https://threejs.org/docs/index.html#api/en/scenes/Scene">Scene</a></p>
            </summary>
            <inheritdoc><see cref="T:Blazor3D.Core.Object3D"/></inheritdoc>
        </member>
        <member name="P:Blazor3D.Scenes.Scene.BackGroundColor">
            <summary>
            Scene background color. 
            You can use <a target="_blank" href="https://developer.mozilla.org/en-US/docs/Web/CSS/color_value">web color values</a> to set up required color.
            Default value is "DarkSlateBlue">
            </summary>
        </member>
    </members>
</doc>
